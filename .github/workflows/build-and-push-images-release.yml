name: Build and push release images

on:
  workflow_call:
    inputs:
      modules:
        description: 'JSON array of modules to build'
        required: true
        type: string

jobs:
  build-and-push-images-release:
    name: Build & Push (${{ matrix.module }})
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJson(inputs.modules) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract and Sanitize Service Name
        id: vars
        run: |
          BASE_NAME=$(basename ${{ matrix.module }})
          SERVICE_NAME=${BASE_NAME//_/-}
          echo "service_name=$SERVICE_NAME" >> $GITHUB_OUTPUT

      - name: Extract Docker metadata for Release
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ steps.vars.outputs.service_name }}
          tags: |
            # type=semver: extract semver from Git-tag
            # 'v1.2.3' => '1.2.3', '1.2', '1'
            type=semver,pattern={{version}}

            # type=ref,event=tag: use tag name as is
            # 'v1.2.3' => 'v1.2.3'
            type=ref,event=tag

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.module }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
