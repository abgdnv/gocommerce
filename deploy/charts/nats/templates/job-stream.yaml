apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-nats-streams
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
data:
  {{- (.Files.Glob "streams/*.json").AsConfig | nindent 2 }}

---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-nats-stream-setup"
  labels:
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/name: "{{ .Chart.Name }}"
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 1
  template:
    spec:
      restartPolicy: Never

      containers:
        - name: nats-stream-setup
          image: natsio/nats-box:0.18.0-nonroot
          command:
            - /bin/sh
            - -c
            - |

              set -e

              {{- $hostname := (printf "%s-nats.%s.svc.cluster.local" $.Release.Name $.Release.Namespace) }}
              {{- $port := .Values.nats.config.nats.port }}

              echo "Waiting for NATS at {{ $hostname }}:{{ $port }}..."

              until printf "." && nc -z -w 2 {{ $hostname }} {{ $port }}; do
                  sleep 2;
              done;

              echo "Creating/updating NATS streams..."

              for stream_config_file in /config/*.json; do
                echo "Processing stream config: $stream_config_file"
                STREAM_NAME=$(jq -r '.name' "$stream_config_file")
                if [ -z "$STREAM_NAME" ]; then
                  echo "Error: Could not find .name in $stream_config_file"
                  exit 1
                fi
                echo "Applying config for stream: $STREAM_NAME"
                nats --server={{ $hostname }}:{{ $port }} stream create --config="$stream_config_file" || \
                nats --server={{ $hostname }}:{{ $port }} stream update "$STREAM_NAME" --config="$stream_config_file" -f
              done
              echo "All stream configurations applied successfully."
          volumeMounts:
            - name: nats-stream-volume
              mountPath: /config
      volumes:
        - name: nats-stream-volume
          configMap:
            name: {{ .Release.Name }}-nats-streams
