replicaCount: 1

image:
  repository: user-service
  pullPolicy: IfNotPresent
  tag: "0.1.0"

init:
  img: busybox:1.37
  host: gc-infra-keycloakx-http
  port: 80

imagePullSecrets: []

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: "user-sa"

podAnnotations: {}

podLabels:
  component: api
  team: backend

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  grpcPort: 50051
  pprofPort: 6060

resources: {}

livenessProbe:
  grpc:
    port: 50051
  initialDelaySeconds: 30
readinessProbe:
  grpc:
    port: 50051
  initialDelaySeconds: 30

env:
  USER_LOG_LEVEL: "debug"
  USER_PPROF_ENABLED: true
  USER_PPROF_ADDR: ":6060"
  USER_GRPC_PORT: 50051
  USER_GRPC_REFLECTION: true
  USER_IDP_URL: http://gc-infra-keycloakx-http/auth
  USER_IDP_REALM: gocommerce
  USER_IDP_CLIENTID: gocommerce-api
  USER_SHUTDOWN_TIMEOUT: 5s

envFromSecret:
  USER_IDP_SECRET:
    name: gc-infra-user-idp-secret
    key: secret

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
