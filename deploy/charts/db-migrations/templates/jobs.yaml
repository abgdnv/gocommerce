{{- range .Values.migrations }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $.Release.Name }}-migrate-{{ .db | replace "_" "-" }}
  labels:
    app: migrate-{{ .name }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      initContainers:
      - name: wait-for-postgres
        image: {{ $.Values.psql_img }}
        env:
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .secret }}
                key: password
        command: [ 'sh', '-c',
                   'until psql -h {{ .dbHost }} -U {{ .user }} -d {{ .db }} -c "\\q"; do echo "Waiting for database {{ .db }}..."; sleep 2; done;' ]
      containers:
        - name: migrate-orders
          image: {{ $.Values.migrate_img }}
          command: [ "/bin/sh", "-c" ]
          args:
            - |
              POSTGRES_URL="postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@{{ .dbHost }}/{{ .db }}?sslmode=disable"
              /usr/local/bin/migrate -path /migrations -database "$POSTGRES_URL" up
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .secret }}
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .secret }}
                  key: password
          volumeMounts:
            - name: {{ .name }}-migrations-volume
              mountPath: /migrations
      volumes:
        - name: {{ .name }}-migrations-volume
          configMap:
            name: {{ $.Release.Name }}-{{ .name }}-migrations
      restartPolicy: Never
---
{{- end }}
