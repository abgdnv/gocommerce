apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-migrate-products-db"
  labels:
    app: migrate-products
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      initContainers:
        - name: wait-for-postgres
          image: {{ .Values.psql_img }}
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.products }}
                  key: password
          command: [ 'sh', '-c',
                     'until psql -h {{ .Values.dbHost }} -U {{ .Values.db.products.user }} -d {{ .Values.db.products.name }} -c "\\q"; do echo "Waiting for database {{ .Values.db.products.name }}..."; sleep 10; done;' ]
      containers:
        - name: migrate-products
          image: {{ .Values.migrate_img }}
          command: [ "/bin/sh", "-c" ]
          args:
            - |
              POSTGRES_URL="postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@{{ .Values.dbHost }}/{{ .Values.db.products.name }}?sslmode=disable"
              /usr/local/bin/migrate -path /migrations -database "$POSTGRES_URL" up
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.products }}
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.products }}
                  key: password
          volumeMounts:
            - name: product-migrations-volume
              mountPath: /migrations
      volumes:
        - name: product-migrations-volume
          configMap:
            name: {{ .Release.Name }}-product-migrations
      restartPolicy: Never
