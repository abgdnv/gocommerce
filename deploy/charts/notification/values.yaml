replicaCount: 1
image:
  repository: notification-service
  pullPolicy: IfNotPresent
  tag: "0.1.0"

imagePullSecrets: []
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: "notification-sa"

podAnnotations: {}

podLabels:
  component: api
  team: backend

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  pprofPort: 6060

livenessProbe:
  exec:
    command:
      - sh
      - -c
      - find /tmp/live -mmin -1
  initialDelaySeconds: 30
  periodSeconds: 30
  failureThreshold: 2

readinessProbe:
  exec:
    command:
      - test
      - -f
      - /tmp/ready
  initialDelaySeconds: 30
  periodSeconds: 30
  failureThreshold: 2

env:
  # Log Configuration
  NOTIFICATION_LOG_LEVEL: "info"

  # PProf Configuration
  NOTIFICATION_PPROF_ENABLED: "true"
  NOTIFICATION_PPROF_ADDR: ":6060"

  # NATS Configuration
  NOTIFICATION_NATS_URL: "nats://gc-infra-nats:4222"
  NOTIFICATION_NATS_TIMEOUT: "2s"

  # Subscriber Configuration
  NOTIFICATION_SUBSCRIBER_STREAM: "ORDERS"
  NOTIFICATION_SUBSCRIBER_SUBJECT: "orders.created"
  NOTIFICATION_SUBSCRIBER_CONSUMER: "notification_service"
  NOTIFICATION_SUBSCRIBER_BATCH: "10"
  NOTIFICATION_SUBSCRIBER_TIMEOUT: "3s"
  NOTIFICATION_SUBSCRIBER_INTERVAL: "3s"
  NOTIFICATION_SUBSCRIBER_WORKERS: "3"

  # Telemetry
  NOTIFICATION_TELEMETRY_TRACES_OTLPHTTP_ENDPOINT: jaeger-instance-collector.monitoring.svc.cluster.local:4318
  NOTIFICATION_TELEMETRY_TRACES_OTLPHTTP_INSECURE: true
  NOTIFICATION_TELEMETRY_TRACES_OTLPHTTP_TIMEOUT: 2s

  # Shutdown Configuration
  NOTIFICATION_SHUTDOWN_TIMEOUT: "5s"

envFromSecret: {}

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
